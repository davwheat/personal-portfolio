{"version":3,"file":"component---src-pages-blog-search-tsx-aab40cf4fe919305262f.js","mappings":"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","sources":["webpack://personal-portfolio/./src/pages/blog/search.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport { graphql, PageProps } from 'gatsby'\n\nimport Link from '@components/Links/Link'\nimport Layout from '@components/Layout'\nimport Hero from '@components/Design/Hero'\nimport Section from '@components/Design/Section'\nimport TextBox from '@components/Inputs/TextBox'\n\nimport Colors from '@data/colors.json'\n\nimport { makeStyles } from '@material-ui/styles'\nimport Breakpoints from '@data/breakpoints'\nimport generateTransitions from '@functions/generateTransitions'\n\nimport fuse from 'fuse.js'\nimport clsx from 'clsx'\n\ninterface ISearchResultDocument {\n  id: string\n  title: string\n  tags: string[]\n  description: string\n  path: string\n}\n\ninterface ISearchState {\n  results: ISearchResultDocument[]\n  query: string\n}\n\ninterface IBlogSearchData {\n  fuseSearchIndex: {\n    fuse: {\n      index: any\n      documents: ISearchResultDocument[]\n    }\n  }\n}\n\nconst useStyles = makeStyles({\n  list: {\n    margin: 0,\n    padding: 0,\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gap: 24,\n\n    [Breakpoints.between.desktopSmall.and.phone]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n\n    [Breakpoints.upTo.tablet]: {\n      gridTemplateColumns: '1fr',\n      gap: 16,\n    },\n  },\n  resultCount: {\n    marginBottom: 24,\n  },\n})\n\nexport default function BlogSearch({ data, location }: PageProps<IBlogSearchData>) {\n  const { fuseSearchIndex } = data\n  const classes = useStyles()\n\n  const fuseSearcher = useMemo(() => {\n    const idx = fuse.parseIndex<ISearchResultDocument>(fuseSearchIndex.fuse.index)\n\n    return new fuse<ISearchResultDocument>(\n      fuseSearchIndex.fuse.documents,\n      {\n        keys: [\n          {\n            name: 'title',\n            weight: 3,\n          },\n          {\n            name: 'searchKeywords',\n            weight: 4,\n          },\n        ],\n        ignoreLocation: true,\n        threshold: 0.4,\n      },\n      idx,\n    )\n  }, [fuseSearchIndex])\n\n  const [searchState, setSearchState] = useState<ISearchState>({\n    query: '',\n    results: [],\n  })\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search.substring(1))\n\n    setSearchState(v => ({ ...v, query: params.get('q') || v.query }))\n  }, [location])\n\n  useEffect(() => {\n    if (searchState.query.trim()) {\n      const paramResults = fuseSearcher.search(searchState.query.trim()).map(i => i.item)\n      setSearchState(v => ({ ...v, results: paramResults }))\n    } else {\n      setSearchState(v => ({ ...v, results: [] }))\n    }\n  }, [searchState.query, fuseSearcher])\n\n  const { query, results } = searchState\n\n  return (\n    <Layout location={location} title=\"Search blog\" description=\"Search blog articles from David Wheatley.\">\n      <Hero firstElement color={Colors.primaryBlue}>\n        <h1 className=\"text-shout\">Search blog</h1>\n      </Hero>\n\n      <Section darker usePadding>\n        <TextBox type=\"search\" label=\"Search\" placeholder=\"Start typing...\" onInput={query => setSearchState(v => ({ ...v, query }))} />\n      </Section>\n\n      <Section width=\"wider\">\n        <p aria-live=\"polite\" role=\"status\" className={clsx('text-speak-up', classes.resultCount)}>\n          {results.length} {results.length !== 1 ? 'results' : 'result'} found\n        </p>\n\n        {query.trim() === '' && (\n          <p role=\"status\" className=\"text-center text-loud\">\n            Please enter a search query.\n          </p>\n        )}\n\n        <ul aria-live=\"polite\" className={classes.list}>\n          {results.map(result => (\n            <ResultItem key={result.id} title={result.title} path={`/blog/${result.path}`} />\n          ))}\n        </ul>\n      </Section>\n    </Layout>\n  )\n}\n\nconst useLinkItemStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  linkItem: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    padding: '10px 18px',\n    paddingRight: 20,\n    border: '1px solid currentColor',\n    borderRadius: 0,\n    gap: 8,\n    transformOrigin: 'center',\n    '&::after': {\n      content: '\"\"',\n      display: 'block',\n      width: '0.75em',\n      height: '0.75em',\n      minWidth: '0.75em',\n      minHeight: '0.75em',\n      borderTop: '2px solid currentColor',\n      borderRight: '2px solid currentColor',\n      transform: 'rotate(45deg)',\n      ...generateTransitions('transform'),\n    },\n    '&:hover, &:focus, &:active': {\n      '&::after': {\n        transform: 'translateX(3px) scaleY(0.92) scaleX(1.05) rotate(45deg)',\n      },\n    },\n    '& span': {\n      flexGrow: 1,\n      marginRight: 4,\n    },\n  },\n})\n\nfunction ResultItem({ title, path }) {\n  const classes = useLinkItemStyles()\n\n  return (\n    <li className={classes.root}>\n      <Link role=\"article\" href={path} className={classes.linkItem}>\n        <span>{title}</span>\n      </Link>\n    </li>\n  )\n}\n\nexport const query = graphql`\n  {\n    fuseSearchIndex: siteSearchIndex {\n      fuse\n    }\n  }\n`\n"],"names":["useStyles","makeStyles","list","margin","padding","display","gridTemplateColumns","gap","Breakpoints","resultCount","marginBottom","BlogSearch","data","location","fuseSearchIndex","classes","fuseSearcher","useMemo","idx","fuse","keys","name","weight","ignoreLocation","threshold","useState","query","results","searchState","setSearchState","useEffect","params","URLSearchParams","window","v","paramResults","i","title","description","firstElement","color","Colors","className","darker","usePadding","type","label","placeholder","onInput","width","role","clsx","result","key","path","useLinkItemStyles","root","height","linkItem","alignItems","paddingRight","border","borderRadius","transformOrigin","content","minWidth","minHeight","borderTop","borderRight","transform","generateTransitions","flexGrow","marginRight","ResultItem","href"],"sourceRoot":""}