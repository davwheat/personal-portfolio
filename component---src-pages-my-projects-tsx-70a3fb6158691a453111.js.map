{"version":3,"sources":["webpack://personal-portfolio/./src/functions/generateTransitions.ts","webpack://personal-portfolio/./src/pages/my-projects.tsx"],"names":["Durations","verylong","long","medium","short","DefaultDuration","DefaultEasing","generateTransitions","property","duration","easing","propsIsArray","Array","isArray","durationIsArray","easingIsArray","endTransition","transition","forEach","prop","i","_duration","_easing","length","thisTrans","createTransitionValue","durationMs","console","warn","useStyles","makeStyles","projectsHeroOuter","marginTop","marginBottom","content","display","background","Colors","height","width","clipPath","projectsHero","gap","Breakpoints","alignItems","gridTemplateColumns","justifyItems","textAlign","projectsLinkContainer","projectsLink","padding","paddingRight","border","borderRadius","transformOrigin","borderTop","borderRight","transform","title","firstElement","size","color","className","role"],"mappings":"6JAAO,IAAMA,EAAY,CACvBC,SAAU,IACVC,KAAM,IACNC,OAAQ,IACRC,MAAO,KAGIC,EAAkBL,EAAUG,OAC5BG,EAAgB,cASd,SAASC,EACtBC,EACAC,EACAC,QACwB,IAFxBD,MAAmE,eAE3C,IADxBC,MAA4B,eAE5B,IAAMC,EAAeC,MAAMC,QAAQL,GAC7BM,EAAkBF,MAAMC,QAAQJ,GAChCM,EAAgBH,MAAMC,QAAQH,GAEpC,GAAIC,EAAc,CAEhB,IAAMK,EAAgB,CAAEC,WAAY,IAgCpC,OA7BAT,EAASU,SAAQ,SAACC,EAAcC,GAC9B,IACIC,EADAC,EAAUZ,GAAUJ,EAatBe,EAFEP,EAGuB,iBAAhBL,EAASW,GAAkBX,EAASW,GAAKpB,EAAUS,EAASW,KAAOpB,EAAUU,EAAOA,EAAOa,OAAS,KAAOlB,EAGpF,iBAAbI,EAAwBA,EAAWT,EAAUS,IAAaJ,EAG3EU,IAAeO,EAAUZ,EAAOU,IAAMV,EAAOA,EAAOa,OAAS,IAAMjB,GAEvE,IAAMkB,EAAYC,EAAsBN,EAAME,EAAWC,GAGzDN,EAAcC,WAAaD,EAAcC,YAA2C,KAA7BD,EAAcC,WAAoBO,EAAlC,KAAmDA,MAGrGR,EAIP,IACIK,EADAC,EAAUZ,GAAUJ,EAoBxB,OAREe,EAFEP,EAEiC,iBAAhBL,EAAS,GAAkBA,EAAS,GAAKT,EAAUS,EAAS,KAAOJ,EAGtD,iBAAbI,EAAwBA,EAAWT,EAAUS,IAAaJ,EAG3EU,IAAeO,EAAUZ,EAAO,IAAMJ,GAEnC,CACLW,WAAYQ,EAAsBjB,EAAUa,EAAWC,IAK7D,SAASG,EAAsBjB,EAAUkB,EAAYhB,GAGnD,OAFIgB,EAAa,GAAGC,QAAQC,KAAK,qGAEvBpB,EAAV,IAAsBkB,EAAtB,MAAsChB,I,4HCjFlCmB,GAAYC,OAAW,CAC3BC,kBAAmB,CACjBC,UAAW,EACXC,aAAc,EACd,sBAAuB,CACrBC,QAAS,KACTC,QAAS,QACTC,WAAYC,KACZC,OAAQ,EACRC,MAAO,QAET,YAAa,CACXC,SAAU,sCAEZ,WAAY,CACVA,SAAU,uCAGdC,cAAY,GACVN,QAAS,OACTO,IAAK,IAFK,EAGTC,mBAA4B,CAC3BC,WAAY,SACZC,oBAAqB,YALb,EAOTF,iBAA0B,CACzBG,aAAc,SACdD,oBAAqB,MACrBE,UAAW,UAVH,GAaZC,sBAAuB,GACvBC,aAAc,CACZd,QAAS,cACTS,WAAY,SACZM,QAAS,YACTC,aAAc,GACdC,OAAQ,yBACRC,aAAc,EACdX,IAAK,EACLY,gBAAiB,SACjB,0BACEpB,QAAS,KACTC,QAAS,eACTI,MAAO,SACPD,OAAQ,SACRiB,UAAW,yBACXC,YAAa,yBACbC,UAAW,kBACRlD,QAAoB,cAEzB,6BAA8B,CAC5B,WAAY,CACVkD,UAAW,+DAiCnB,UA3BiC,WACf5B,IAEhB,OACE,wBAAC,IAAD,CAAQ6B,MAAM,eACZ,wBAAC,IAAD,CAAMC,cAAY,EAACC,KAAK,OAAOC,MAAOxB,MACpC,8BAAIyB,UAAU,eAAd,eACA,6BAAGC,KAAK,eAAeD,UAAU,aAAjC,sFAKF,wBAAC,IAAD,KACE,8BAAIA,UAAU,eAAd,UACA,6BAAGA,UAAU,cAAb,uPAIA,6BAAGA,UAAU,cAAb,YACW,yDADX","file":"component---src-pages-my-projects-tsx-70a3fb6158691a453111.js","sourcesContent":["export const Durations = {\n  verylong: 750,\n  long: 250,\n  medium: 200,\n  short: 125,\n} as const\n\nexport const DefaultDuration = Durations.medium\nexport const DefaultEasing = 'ease-in-out'\n\n/**\n * Generates a transition object to be used for CSS-in-JS.\n *\n * Implement with a `...` spread operator on the function.\n *\n * @example { \"myCoolClass\": { ...generateTransition(\"color\", \"medium\", \"ease-out\") } }\n */\nexport default function generateTransitions(\n  property: string | string[],\n  duration: keyof typeof Durations | Array<keyof typeof Durations> = 'medium',\n  easing: string | string[] = 'ease-in-out',\n): { transition: string } {\n  const propsIsArray = Array.isArray(property)\n  const durationIsArray = Array.isArray(duration)\n  const easingIsArray = Array.isArray(easing)\n\n  if (propsIsArray) {\n    // we have multiple transitions to generate\n    const endTransition = { transition: '' }\n\n    // @ts-expect-error: This is definitely an array.\n    property.forEach((prop: string, i: string | number) => {\n      let _easing = easing || DefaultEasing\n      let _duration\n\n      /*\n        if we have multiple easing/duration values, use, in desc. order:\n      \n        1. value at same index as this property\n        2. last value\n        3. default value\n      */\n\n      if (durationIsArray) {\n        // use manual ms input, failing that use string-based values as explained above\n        _duration =\n          typeof duration[i] === 'number' ? duration[i] : Durations[duration[i]] || Durations[easing[easing.length - 1]] || DefaultDuration\n      } else {\n        // @ts-expect-error: `duration` is definitely not an array.\n        _duration = typeof duration === 'number' ? duration : Durations[duration] || DefaultDuration\n      }\n\n      if (easingIsArray) _easing = easing[i] || easing[easing.length - 1] || DefaultEasing\n\n      const thisTrans = createTransitionValue(prop, _duration, _easing)\n\n      // append this transition's string value, with comma if there has been values before it\n      endTransition.transition = endTransition.transition + (endTransition.transition === '' ? thisTrans : `, ${thisTrans}`)\n    })\n\n    return endTransition\n  } else {\n    // only one value to transition\n\n    let _easing = easing || DefaultEasing\n    let _duration: number\n\n    /*\n      if we have multiple easing/duration values, use, in desc. order:\n    \n      1. value at same index 0\n      3. default value\n    */\n\n    if (durationIsArray) {\n      // use manual ms input, failing that use string-based values as explained above\n      _duration = typeof duration[0] === 'number' ? duration[0] : Durations[duration[0]] || DefaultDuration\n    } else {\n      // @ts-expect-error: `duration` is definitely not an array.\n      _duration = typeof duration === 'number' ? duration : Durations[duration] || DefaultDuration\n    }\n\n    if (easingIsArray) _easing = easing[0] || DefaultEasing\n\n    return {\n      transition: createTransitionValue(property, _duration, _easing),\n    }\n  }\n}\n\nfunction createTransitionValue(property, durationMs, easing) {\n  if (durationMs < 5) console.warn('`createTransitionValue` called with duration < 5ms. Are you sure this was passed in milliseconds?')\n\n  return `${property} ${durationMs}ms ${easing}`\n}\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Hero from '../components/Design/Hero'\n\nimport Colors from '../data/colors.json'\nimport Section from '../components/Design/Section'\nimport Tech from '../components/PageComponents/Tech'\nimport Link from '../components/Links/Link'\nimport { makeStyles } from '@material-ui/styles'\nimport Breakpoints from '../data/breakpoints'\nimport generateTransitions from '../functions/generateTransitions'\n\nconst useStyles = makeStyles({\n  projectsHeroOuter: {\n    marginTop: 8,\n    marginBottom: 8,\n    '&::after, &::before': {\n      content: '\"\"',\n      display: 'block',\n      background: Colors.primaryRed,\n      height: 8,\n      width: '100%',\n    },\n    '&::before': {\n      clipPath: 'polygon(0% 0%, 0% 100%, 100% 100%)',\n    },\n    '&::after': {\n      clipPath: 'polygon(0% 0%, 100% 0%, 100% 100%)',\n    },\n  },\n  projectsHero: {\n    display: 'grid',\n    gap: 16,\n    [Breakpoints.downTo.tablet]: {\n      alignItems: 'center',\n      gridTemplateColumns: '1fr auto',\n    },\n    [Breakpoints.upTo.tablet]: {\n      justifyItems: 'center',\n      gridTemplateColumns: '1fr',\n      textAlign: 'center',\n    },\n  },\n  projectsLinkContainer: {},\n  projectsLink: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    padding: '10px 18px',\n    paddingRight: 20,\n    border: '1px solid currentColor',\n    borderRadius: 0,\n    gap: 8,\n    transformOrigin: 'center',\n    '&::after': {\n      content: '\"\"',\n      display: 'inline-block',\n      width: '0.75em',\n      height: '0.75em',\n      borderTop: '2px solid currentColor',\n      borderRight: '2px solid currentColor',\n      transform: 'rotate(45deg)',\n      ...generateTransitions('transform'),\n    },\n    '&:hover, &:focus, &:active': {\n      '&::after': {\n        transform: 'translateX(3px) scaleY(0.92) scaleX(1.05) rotate(45deg)',\n      },\n    },\n  },\n})\n\nconst MyProjectsPage: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <Layout title=\"My projects\">\n      <Hero firstElement size=\"huge\" color={Colors.primaryRed}>\n        <h1 className=\"text-louder\">My projects</h1>\n        <p role=\"doc-subtitle\" className=\"text-loud\">\n          Take a peek at my favourite projects that I've worked on over the past few years.\n        </p>\n      </Hero>\n\n      <Section>\n        <h2 className=\"text-louder\">Hello!</h2>\n        <p className=\"text-speak\">\n          Usually, people's portfolio websites are super fancy, well-crafted, but also bloated and heavy. Not mine. This site is statically\n          generated from fully-fledged React into simple, performant, and powerful HTML, CSS and Javascript with Gatsby.js.\n        </p>\n        <p className=\"text-speak\">\n          I prefer <strong>simple websites</strong>. Websites which are responsive and perform well on all devices, no matter how old and slow.\n          Websites are for everyone, so everyone should be able to use them, no matter their device or internet&nbsp;connection.\n        </p>\n      </Section>\n    </Layout>\n  )\n}\n\nexport default MyProjectsPage\n"],"sourceRoot":""}