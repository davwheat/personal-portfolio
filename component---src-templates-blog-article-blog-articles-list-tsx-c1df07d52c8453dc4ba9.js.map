{"version":3,"file":"component---src-templates-blog-article-blog-articles-list-tsx-c1df07d52c8453dc4ba9.js","mappings":"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","sources":["webpack://personal-portfolio/./src/components/BlogComponents/BlogCard.tsx","webpack://personal-portfolio/./src/components/BlogComponents/PageNavigator.tsx","webpack://personal-portfolio/./src/templates/blog-article/BlogArticlesList.tsx"],"sourcesContent":["import React from 'react'\n\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Link from '@components/Links/Link'\nimport generateTransitions from '@functions/generateTransitions'\n\nimport dayjs from 'dayjs'\nimport dayjsLocalizedFormat from 'dayjs/plugin/localizedFormat'\n\ndayjs.extend(dayjsLocalizedFormat)\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    padding: 16,\n    border: '2px solid #000',\n    ...generateTransitions('box-shadow', 'short'),\n    '&:hover, &:focus-within': {\n      boxShadow: '0 0 0 2px black',\n    },\n  },\n  subtitle: {\n    textTransform: 'uppercase',\n    marginBottom: 12,\n    lineHeight: 1.2,\n    color: '#666',\n  },\n  title: {\n    marginBottom: 4,\n    '& a::after': {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n  },\n})\n\nexport interface IBlogCardProps {\n  title: string\n  date: string\n  description: string\n  slug: string\n}\n\nexport const BlogCard = ({ title, date, description, slug }: IBlogCardProps) => {\n  const classes = useStyles()\n\n  return (\n    <li className={classes.root}>\n      <h2 className={clsx(classes.title, 'text-loud')}>\n        <Link href={slug}>{title}</Link>\n      </h2>\n\n      <p className={clsx(classes.subtitle, 'text-whisper-loud')}>{dayjs(date).format('LL')}</p>\n      <p>{description}</p>\n    </li>\n  )\n}\n","import React from 'react'\n\nimport clsx from 'clsx'\n\nimport Link from '@components/Links/Link'\n\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 'auto',\n    display: 'grid',\n    width: 'max-content',\n    gap: 4,\n\n    '& > *': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 32,\n      height: 32,\n    },\n  },\n  noSelect: {\n    userSelect: 'none',\n  },\n  box: {\n    border: '2px solid #000',\n    textDecoration: 'none',\n    fontWeight: 'bold',\n\n    '&[data-selected]': {\n      background: '#000',\n      color: '#fff',\n    },\n  },\n})\n\nexport default function PageNavigator({ currentPage, maxPage }) {\n  const classes = useStyles()\n\n  const pages = new Set<number>()\n\n  pages.add(1)\n  pages.add(maxPage)\n  pages.add(currentPage)\n  pages.add(currentPage + 1)\n  pages.add(currentPage - 1)\n\n  const pageArray: number[] = Array.from(pages).filter(p => p >= 1 && p <= maxPage)\n\n  let lastP = 1\n\n  const itemArr = []\n\n  itemArr.push(\n    currentPage !== 1 ? (\n      <Link key=\"prev_a\" className={classes.noSelect} aria-label=\"Previous page\" href={`/blog/${currentPage - 1}`}>\n        &lt;\n      </Link>\n    ) : (\n      <span key=\"prev_t\" className={classes.noSelect} aria-hidden>\n        &lt;\n      </span>\n    ),\n  )\n\n  pageArray.forEach(p => {\n    const showDots = p - lastP > 1\n    lastP = p\n\n    if (showDots) itemArr.push(<span>...</span>)\n\n    const selected = p === currentPage\n\n    if (selected) {\n      itemArr.push(\n        <span key={`${p}_sel`} aria-label={`Page ${p} (selected)`} className={clsx(classes.box, classes.noSelect)} data-selected>\n          {p}\n        </span>,\n      )\n    } else {\n      itemArr.push(\n        <Link key={`${p}_desel`} aria-label={`Page ${p}`} className={classes.box} href={`/blog/${p}`}>\n          {p}\n        </Link>,\n      )\n    }\n  })\n\n  itemArr.push(\n    currentPage !== maxPage ? (\n      <Link key=\"next_a\" className={classes.noSelect} aria-label=\"Next page\" href={`/blog/${currentPage + 1}`}>\n        &gt;\n      </Link>\n    ) : (\n      <span key=\"next_t\" className={classes.noSelect} aria-hidden>\n        &gt;\n      </span>\n    ),\n  )\n\n  return (\n    <nav className={classes.root} style={{ gridTemplateColumns: `repeat(${itemArr.length}, 1fr)` }}>\n      {itemArr}\n    </nav>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { BlogCard } from '@components/BlogComponents/BlogCard'\nimport PageNavigator from '@components/BlogComponents/PageNavigator'\nimport Layout from '@components/Layout'\nimport Hero from '@components/Design/Hero'\nimport Section from '@components/Design/Section'\n\nimport Colors from '@data/colors.json'\n\nimport type { LocationContext } from '@gatsbyjs/reach-router'\nimport type { IMdxPageContextWithoutBody } from '@templates/blog-article/BlogPageTemplate'\nimport { makeStyles } from '@material-ui/styles'\nimport Breakpoints from '@data/breakpoints'\n\ninterface IBlogArticlesListProps {\n  location: LocationContext\n  data: {\n    allMdx: {\n      nodes: (IMdxPageContextWithoutBody & {\n        frontmatter: { path: string }\n        id: string\n      })[]\n    }\n  }\n  pageContext: {\n    numPages: number\n    currentPage: number\n  }\n}\n\nconst useStyles = makeStyles({\n  list: {\n    margin: 0,\n    padding: 0,\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gap: 24,\n\n    [Breakpoints.between.desktopSmall.and.phone]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n\n    [Breakpoints.upTo.tablet]: {\n      gridTemplateColumns: '1fr',\n    },\n  },\n})\n\nexport default function BlogArticlesList({\n  location,\n  data: {\n    allMdx: { nodes },\n  },\n  pageContext: { numPages, currentPage },\n}: IBlogArticlesListProps) {\n  const classes = useStyles()\n\n  const Posts = nodes.map(node => (\n    <BlogCard\n      key={node.id}\n      title={node.frontmatter.title}\n      description={node.frontmatter.description || node.excerpt}\n      date={node.frontmatter.created_at}\n      slug={`/blog/${node.frontmatter.path}`}\n    />\n  ))\n\n  return (\n    <Layout location={location} title={`Blog | Page ${currentPage}`} description={`Page ${currentPage} of blog articles from David Wheatley.`}>\n      <Hero firstElement color={Colors.primaryBlue}>\n        <h1 className=\"text-shout\">Blog articles</h1>\n        <p role=\"doc-subtitle\" className=\"text-loud\">\n          Page {currentPage} of {numPages}\n        </p>\n      </Hero>\n\n      <Section width=\"wider\">\n        <ul className={classes.list}>{Posts}</ul>\n      </Section>\n\n      <Section>\n        <PageNavigator currentPage={currentPage} maxPage={numPages} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { order: DESC, fields: [frontmatter___created_at] }\n      filter: { frontmatter: { archived: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        frontmatter {\n          title\n          description\n          path\n          created_at(formatString: \"LL\", locale: \"en-GB\")\n        }\n\n        id\n        excerpt\n      }\n    }\n  }\n`\n"],"names":["dayjs","dayjsLocalizedFormat","useStyles","makeStyles","root","position","padding","border","generateTransitions","boxShadow","subtitle","textTransform","marginBottom","lineHeight","color","title","content","display","top","left","right","bottom","BlogCard","date","description","slug","classes","className","clsx","Link","href","format","margin","width","gap","alignItems","justifyContent","height","noSelect","userSelect","box","textDecoration","fontWeight","background","PageNavigator","currentPage","maxPage","pages","Set","add","pageArray","Array","from","filter","p","lastP","itemArr","push","key","forEach","showDots","style","gridTemplateColumns","length","list","Breakpoints","BlogArticlesList","location","nodes","data","allMdx","pageContext","numPages","Posts","map","node","id","frontmatter","excerpt","created_at","path","Layout","Hero","firstElement","Colors","role","Section"],"sourceRoot":""}