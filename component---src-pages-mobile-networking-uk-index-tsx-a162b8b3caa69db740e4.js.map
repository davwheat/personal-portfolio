{"version":3,"file":"component---src-pages-mobile-networking-uk-index-tsx-a162b8b3caa69db740e4.js","mappings":"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","sources":["webpack://personal-portfolio/./src/components/Design/Breadcrumbs.tsx","webpack://personal-portfolio/./src/components/Links/ButtonLink.tsx","webpack://personal-portfolio/./src/components/MobileNetworking/CardLink.tsx","webpack://personal-portfolio/./src/pages/mobile-networking/uk/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core'\n\nimport Section from '@components/Design/Section'\nimport Link from '@components/Links/Link'\nimport ButtonLink from '@components/Links/ButtonLink'\n\nexport interface IBreadcrumb {\n  /**\n   * URL for the page\n   */\n  url: string\n  /**\n   * Textual label\n   */\n  t: string\n}\n\nexport interface IBreadcrumbsProps {\n  data: IBreadcrumb[]\n}\n\nconst useStyles = makeStyles({\n  listRoot: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: 0,\n    padding: 0,\n  },\n\n  separator: {\n    margin: '0 8px',\n    WebkitUserSelect: 'none',\n    userSelect: 'none',\n  },\n})\n\nexport default function Breadcrumbs({ data }: IBreadcrumbsProps) {\n  const classes = useStyles()\n  const breadcrumbsToDisplay: (IBreadcrumb | null)[] = []\n\n  const [breadcrumbsExpanded, setBreadcrumbsExpanded] = useState(false)\n\n  // Limit breadcrumbs to 3 items\n  if (breadcrumbsExpanded || data.length <= 3) breadcrumbsToDisplay.push(...data)\n  else {\n    breadcrumbsToDisplay.push(data[0])\n    breadcrumbsToDisplay.push(null)\n    breadcrumbsToDisplay.push(data[data.length - 2], data[data.length - 1])\n  }\n\n  return (\n    <Section width=\"wider\" darker usePadding>\n      <nav aria-label=\"Breadcrumbs\">\n        <ol className={classes.listRoot}>\n          {breadcrumbsToDisplay.map((crumb, index) => {\n            const separator = index < breadcrumbsToDisplay.length - 1 && (\n              <span className={classes.separator} aria-hidden=\"true\">\n                /\n              </span>\n            )\n\n            if (crumb === null) {\n              return (\n                <li key=\"__ellipses__\">\n                  <ButtonLink aria-label=\"Expand breadcrumbs\" data-tooltip onClick={() => setBreadcrumbsExpanded(true)}>\n                    ...\n                  </ButtonLink>\n                  {separator}\n                </li>\n              )\n            }\n\n            return (\n              <li key={crumb.url}>\n                <Link href={crumb.url} aria-current={index === breadcrumbsToDisplay.length - 1 ? 'page' : undefined}>\n                  {crumb.t}\n                </Link>\n                {separator}\n              </li>\n            )\n          })}\n        </ol>\n      </nav>\n\n      {/* JSON-LD breadcrumb data for crawlers */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          '@context': 'https://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: data.map((crumb, i) => ({\n            '@type': 'ListItem',\n            position: i,\n            item: {\n              '@id': 'https://davwheat.dev' + crumb.url,\n              name: crumb.t,\n            },\n          })),\n        })}\n      </script>\n    </Section>\n  )\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles({\n  linkButton: {\n    appearance: 'none',\n    background: 'none',\n    border: 'none',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    fontFamily: 'inherit',\n    fontSize: '1em',\n    fontWeight: 700,\n    display: 'inline',\n    margin: 0,\n    padding: 0,\n  },\n})\n\ninterface Props {\n  className?: string\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst ButtonLink: React.FC<Props> = ({ children, className, onClick, ...props }) => {\n  const classes = useStyles()\n\n  return (\n    <button onClick={onClick} className={clsx(classes.linkButton, className)} {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default ButtonLink\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core'\n\nimport Link from '../Links/Link'\n\nimport clsx from 'clsx'\nimport generateTransitions from '@functions/generateTransitions'\n\ninterface ICardLinkProps {\n  title: React.ReactChild\n  description?: React.ReactChild\n  url: string\n}\n\nconst CARD_PADDING = 16 as const\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: CARD_PADDING,\n    position: 'relative',\n    flexGrow: 1,\n  },\n\n  header: {\n    display: 'flex',\n    gap: 8,\n  },\n\n  heading: {\n    flexGrow: 1,\n  },\n\n  link: {\n    textDecoration: 'none',\n    display: 'flex',\n    border: '2px solid black',\n    outline: '0px solid black',\n\n    '&:hover, &:focus, &:active': {\n      outlineWidth: 2,\n      '& $arrow': {\n        '&::after': {\n          transform: 'translateX(3px) scaleY(0.92) scaleX(1.05) rotate(45deg)',\n        },\n      },\n    },\n  },\n\n  arrow: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    padding: '10px 18px',\n    paddingRight: 20,\n    gap: 8,\n    transformOrigin: 'center',\n    '&::after': {\n      content: '\"\"',\n      display: 'inline-block',\n      width: '0.75em',\n      height: '0.75em',\n      borderTop: '2px solid currentColor',\n      borderRight: '2px solid currentColor',\n      transform: 'rotate(45deg)',\n      ...generateTransitions('transform'),\n    },\n  },\n\n  spring: {\n    flexGrow: 1,\n  },\n\n  headingNoMargin: {\n    marginBottom: 0,\n  },\n})\n\nfunction CardLink({ title, description, url }: ICardLinkProps) {\n  const classes = useStyles()\n\n  return (\n    <Link className={classes.link} href={url}>\n      <article className={classes.card}>\n        <header className={classes.header}>\n          <h3 className={clsx('text-loud', classes.heading, !description && classes.headingNoMargin)}>{title}</h3>\n        </header>\n\n        {description && (\n          <>\n            <div aria-hidden className={classes.spring} />\n            <p className=\"text-speak\">{description}</p>\n          </>\n        )}\n      </article>\n      <div aria-hidden=\"true\" className={classes.arrow} />\n    </Link>\n  )\n}\n\nexport default CardLink\n","import React from 'react'\n\nimport Section from '@components/Design/Section'\nimport Hero from '@components/Design/Hero'\nimport Layout from '@components/Layout'\nimport CardLink from '@components/MobileNetworking/CardLink'\nimport Link from '@components/Links/Link'\n\nimport Colors from '@data/colors.json'\nimport Breakpoints from '@data/breakpoints'\n\nimport { makeStyles } from '@material-ui/styles'\nimport Breadcrumbs from '@components/Design/Breadcrumbs'\n\ninterface ILinkGroup {\n  groupName: string\n  groupDescription: string\n  groupLinks: ILink[]\n}\n\ninterface ILink {\n  title: string\n  description: string\n  url: string\n}\n\nconst Links: ILinkGroup[] = [\n  {\n    groupName: 'Datasets',\n    groupDescription: 'A variety of UK mobile networking related datasets hosted by me.',\n    groupLinks: [\n      {\n        title: 'NR/EARFCN list',\n        description: 'A list of UK mobile network frequencies by their NRARFCNs and EARFCNs.',\n        url: '/mobile-networking/uk/arfcn-list',\n      },\n      {\n        title: 'Spectrum allocation',\n        description: 'A visualisation of spectrum allocation for mobile networks within the UK.',\n        url: '/mobile-networking/uk/spectrum',\n      },\n    ],\n  },\n]\n\nconst useStyles = makeStyles({\n  linkList: {\n    marginTop: 24,\n    display: 'grid',\n    gridTemplateColumns: 'repeat(var(--columns), minmax(0, 1fr))',\n    gap: 32,\n    '--columns': 1,\n\n    [Breakpoints.downTo.tablet]: {\n      '--columns': 2,\n    },\n  },\n})\n\nfunction MobileNetworkingPage({ location }) {\n  const classes = useStyles()\n\n  return (\n    <Layout\n      location={location}\n      title=\"Mobile networking in the UK\"\n      description=\"A collection of UK mobile networking tools and datasets maintained as part of my hobby.\"\n    >\n      <Hero firstElement size=\"huge\" color={Colors.primaryBlue}>\n        <h1 className=\"text-shout\">Mobile networking in the UK</h1>\n        <p role=\"doc-subtitle\" className=\"text-loud\">\n          A collection of UK mobile networking tools and datasets maintained as part of my hobby.\n        </p>\n      </Hero>\n\n      <Breadcrumbs\n        data={[\n          { t: 'Home', url: '/' },\n          { t: 'Mobile networking', url: '/mobile-networking' },\n          { t: 'United Kingdom', url: '/mobile-networking/uk' },\n        ]}\n      />\n\n      {Links.map((group, i) => (\n        <Section key={i} darker={i % 2 === 0 ? false : true} width=\"wider\">\n          <h2 className=\"text-louder\">{group.groupName}</h2>\n          <p className=\"text-speak\">{group.groupDescription}</p>\n\n          <div className={classes.linkList}>\n            {group.groupLinks.map(link => (\n              <CardLink key={link.title} {...link} />\n            ))}\n          </div>\n        </Section>\n      ))}\n    </Layout>\n  )\n}\n\nexport default MobileNetworkingPage\n"],"names":["useStyles","makeStyles","listRoot","display","flexWrap","margin","padding","separator","WebkitUserSelect","userSelect","Breadcrumbs","data","classes","breadcrumbsToDisplay","useState","breadcrumbsExpanded","setBreadcrumbsExpanded","width","darker","usePadding","className","index","crumb","key","onClick","url","href","undefined","type","JSON","itemListElement","position","item","name","t","linkButton","appearance","background","border","cursor","textDecoration","fontFamily","fontSize","fontWeight","children","props","clsx","card","flexDirection","flexGrow","header","gap","heading","link","outline","outlineWidth","transform","arrow","alignItems","paddingRight","transformOrigin","content","height","borderTop","borderRight","generateTransitions","spring","headingNoMargin","marginBottom","title","description","Links","groupName","groupDescription","groupLinks","linkList","marginTop","gridTemplateColumns","Breakpoints","location","firstElement","size","color","Colors","role","i","group"],"sourceRoot":""}